{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { ColorPicker, useColorPickerContext } from '@ark-ui/react/color-picker';\nimport { forwardRef } from 'react';\nimport { mergeProps } from '../../merge-props.js';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { PipetteIcon } from '../icons.js';\nimport { Stack } from '../stack/stack.js';\nimport { IconButton } from '../button/icon-button.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: useColorPickerStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"colorPicker\"\n});\nconst ColorPickerRootProvider = withProvider(ColorPicker.RootProvider, \"root\", {\n  forwardAsChild: true\n});\nconst ColorPickerRoot = withProvider(ColorPicker.Root, \"root\", {\n  forwardAsChild: true\n});\nconst ColorPickerPropsProvider = PropsProvider;\nconst ColorPickerLabel = withContext(ColorPicker.Label, \"label\", {\n  forwardAsChild: true\n});\nconst ColorPickerControl = withContext(ColorPicker.Control, \"control\", {\n  forwardAsChild: true\n});\nconst ColorPickerValueSwatch = withContext(ColorPicker.ValueSwatch, \"swatch\", {\n  forwardAsChild: true\n});\nconst ColorPickerTrigger = withContext(ColorPicker.Trigger, \"trigger\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsx(ColorPickerValueSwatch, {})\n  }\n});\nconst ColorPickerPositioner = withContext(ColorPicker.Positioner, \"positioner\", {\n  forwardAsChild: true\n});\nconst ColorPickerContent = withContext(ColorPicker.Content, \"content\", {\n  forwardAsChild: true\n});\nconst ColorPickerAreaBackground = withContext(ColorPicker.AreaBackground, \"areaBackground\", {\n  forwardAsChild: true\n});\nconst ColorPickerAreaThumb = withContext(ColorPicker.AreaThumb, \"areaThumb\", {\n  forwardAsChild: true\n});\nconst ColorPickerArea = withContext(ColorPicker.Area, \"area\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsx(ColorPickerAreaBackground, {}), /* @__PURE__ */jsx(ColorPickerAreaThumb, {})]\n    })\n  }\n});\nconst ColorPickerChannelSliderTrack = withContext(ColorPicker.ChannelSliderTrack, \"channelSliderTrack\", {\n  forwardAsChild: true\n});\nconst ColorPickerChannelSliderThumb = withContext(ColorPicker.ChannelSliderThumb, \"channelSliderThumb\", {\n  forwardAsChild: true\n});\nconst ColorPickerTransparencyGrid = withContext(ColorPicker.TransparencyGrid, \"transparencyGrid\", {\n  forwardAsChild: true\n});\nconst ColorPickerChannelSlider = withContext(ColorPicker.ChannelSlider, \"channelSlider\", {\n  forwardAsChild: true,\n  defaultProps: {\n    children: /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsx(ColorPickerTransparencyGrid, {\n        size: \"0.6rem\"\n      }), /* @__PURE__ */jsx(ColorPickerChannelSliderTrack, {}), /* @__PURE__ */jsx(ColorPickerChannelSliderThumb, {})]\n    })\n  }\n});\nconst ColorPickerSliders = forwardRef(function ColorPickerSliders2(props, ref) {\n  return /* @__PURE__ */jsxs(Stack, {\n    gap: \"1\",\n    flex: \"1\",\n    px: \"1\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsx(ColorPickerChannelSlider, {\n      channel: \"hue\"\n    }), /* @__PURE__ */jsx(ColorPickerChannelSlider, {\n      channel: \"alpha\"\n    })]\n  });\n});\nconst ColorPickerChannelInput = withContext(ColorPicker.ChannelInput, \"channelInput\", {\n  forwardAsChild: true\n});\nconst ColorPickerInput = forwardRef(function ColorHexInput(props, ref) {\n  return /* @__PURE__ */jsx(ColorPickerChannelInput, {\n    channel: \"hex\",\n    ref,\n    ...props\n  });\n});\nconst ColorPickerSwatchGroup = withContext(ColorPicker.SwatchGroup, \"swatchGroup\", {\n  forwardAsChild: true\n});\nconst ColorPickerSwatchTrigger = withContext(ColorPicker.SwatchTrigger, \"swatchTrigger\", {\n  forwardAsChild: true\n});\nconst ColorPickerSwatch = withContext(ColorPicker.Swatch, \"swatch\", {\n  forwardAsChild: true\n});\nconst ColorPickerSwatchIndicator = withContext(ColorPicker.SwatchIndicator, \"swatchIndicator\", {\n  forwardAsChild: true\n});\nconst ColorPickerValueText = withContext(ColorPicker.ValueText, \"valueText\", {\n  forwardAsChild: true\n});\nconst ColorPickerView = withContext(ColorPicker.View, \"view\", {\n  forwardAsChild: true\n});\nconst ColorPickerFormatTrigger = withContext(ColorPicker.FormatTrigger, \"formatTrigger\", {\n  forwardAsChild: true\n});\nconst ColorPickerFormatSelect = withContext(ColorPicker.FormatSelect, \"formatSelect\", {\n  forwardAsChild: true\n});\nconst ColorPickerEyeDropperTrigger = withContext(ColorPicker.EyeDropperTrigger, \"eyeDropperTrigger\", {\n  forwardAsChild: true\n});\nconst ColorPickerEyeDropper = forwardRef(function ColorPickerEyeDropper2(props, ref) {\n  const {\n    children = /* @__PURE__ */jsx(PipetteIcon, {}),\n    ...rest\n  } = props;\n  const picker = useColorPickerContext();\n  const localProps = mergeProps(picker.getEyeDropperTriggerProps(), rest);\n  return /* @__PURE__ */jsx(IconButton, {\n    ref,\n    ...localProps,\n    children\n  });\n});\nconst ColorPickerChannelSliderValueText = withContext(ColorPicker.ChannelSliderValueText, \"channelSliderValueText\", {\n  forwardAsChild: true\n});\nconst ColorPickerChannelSliderLabel = withContext(ColorPicker.ChannelSliderLabel, \"channelSliderLabel\", {\n  forwardAsChild: true\n});\nconst ColorPickerHiddenInput = forwardRef(function ColorPickerHiddenInput2(props, ref) {\n  return /* @__PURE__ */jsx(ColorPicker.HiddenInput, {\n    tabIndex: -1,\n    ref,\n    ...props\n  });\n});\nconst ColorPickerContext = ColorPicker.Context;\nconst ColorPickerChannelText = withContext(\"span\", \"channelText\", {\n  forwardAsChild: true\n});\nconst formatMap = {\n  rgba: [\"red\", \"green\", \"blue\", \"alpha\"],\n  hsla: [\"hue\", \"saturation\", \"lightness\", \"alpha\"],\n  hsba: [\"hue\", \"saturation\", \"brightness\", \"alpha\"],\n  hexa: [\"hex\", \"alpha\"]\n};\nconst getColorChannels = format => formatMap[format];\nexport { ColorPickerArea, ColorPickerAreaBackground, ColorPickerAreaThumb, ColorPickerChannelInput, ColorPickerChannelSlider, ColorPickerChannelSliderLabel, ColorPickerChannelSliderThumb, ColorPickerChannelSliderTrack, ColorPickerChannelSliderValueText, ColorPickerChannelText, ColorPickerContent, ColorPickerContext, ColorPickerControl, ColorPickerEyeDropper, ColorPickerEyeDropperTrigger, ColorPickerFormatSelect, ColorPickerFormatTrigger, ColorPickerHiddenInput, ColorPickerInput, ColorPickerLabel, ColorPickerPositioner, ColorPickerPropsProvider, ColorPickerRoot, ColorPickerRootProvider, ColorPickerSliders, ColorPickerSwatch, ColorPickerSwatchGroup, ColorPickerSwatchIndicator, ColorPickerSwatchTrigger, ColorPickerTransparencyGrid, ColorPickerTrigger, ColorPickerValueSwatch, ColorPickerValueText, ColorPickerView, getColorChannels, useColorPickerStyles };","map":null,"metadata":{},"sourceType":"module"}