{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { downloadFile } from '@zag-js/file-utils';\nimport { isFunction } from '@zag-js/utils';\nimport { forwardRef } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { ark } from '../factory.js';\nconst DownloadTrigger = forwardRef((props, ref) => {\n  const {\n    fileName,\n    data,\n    mimeType,\n    ...rest\n  } = props;\n  const {\n    getWindow\n  } = useEnvironmentContext();\n  const download = data2 => {\n    downloadFile({\n      file: data2,\n      name: fileName,\n      type: mimeType,\n      win: getWindow()\n    });\n  };\n  const onClick = e => {\n    props.onClick?.(e);\n    if (e.defaultPrevented) return;\n    if (isFunction(data)) {\n      const maybePromise = data();\n      if (maybePromise instanceof Promise) {\n        maybePromise.then(data2 => download(data2));\n      } else {\n        download(maybePromise);\n      }\n    } else {\n      download(data);\n    }\n  };\n  return /* @__PURE__ */jsx(ark.button, {\n    ref,\n    ...rest,\n    type: \"button\",\n    onClick\n  });\n});\nDownloadTrigger.displayName = \"DownloadTrigger\";\nexport { DownloadTrigger };","map":null,"metadata":{},"sourceType":"module"}