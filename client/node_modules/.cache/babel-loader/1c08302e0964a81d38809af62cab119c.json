{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, Children, cloneElement } from 'react';\nimport { InputAddon } from './input-addon.js';\nimport { InputElement } from './input-element.js';\nimport { Group } from '../group/group.js';\nconst InputGroup = forwardRef(function InputGroup2(props, ref) {\n  const {\n    startElement,\n    startElementProps,\n    endElement,\n    endElementProps,\n    startAddon,\n    startAddonProps,\n    endAddon,\n    endAddonProps,\n    children,\n    startOffset = \"0px\",\n    endOffset = \"0px\",\n    ...rest\n  } = props;\n  const child = Children.only(children);\n  const attached = Boolean(startAddon || endAddon);\n  return /* @__PURE__ */jsxs(Group, {\n    width: \"full\",\n    ref,\n    attached,\n    skip: el => el.type === InputElement,\n    ...rest,\n    children: [startAddon && /* @__PURE__ */jsx(InputAddon, {\n      ...startAddonProps,\n      children: startAddon\n    }), startElement && /* @__PURE__ */jsx(InputElement, {\n      pointerEvents: \"none\",\n      ...startElementProps,\n      children: startElement\n    }), cloneElement(child, {\n      ...(startElement && {\n        ps: `calc(var(--input-height) - ${startOffset})`\n      }),\n      ...(endElement && {\n        pe: `calc(var(--input-height) - ${endOffset})`\n      }),\n      ...children.props\n    }), endElement && /* @__PURE__ */jsx(InputElement, {\n      placement: \"end\",\n      ...endElementProps,\n      children: endElement\n    }), endAddon && /* @__PURE__ */jsx(InputAddon, {\n      ...endAddonProps,\n      children: endAddon\n    })]\n  });\n});\nexport { InputGroup };","map":null,"metadata":{},"sourceType":"module"}